let StartLogs = 
    traces
    | where timestamp >= ago(1d)
    | where message has "Running task"
    | extend 
        ServiceName = extract(@"Running task (\w+)", 1, message, typeof(string)),
        StartTime = timestamp
    | project ServiceName, StartTime;

let EndLogs = 
    traces
    | where timestamp >= ago(1d)
    | where message has "Task " and message has " completed"
    | extend 
        ServiceName = extract(@"Task (\w+) completed", 1, message, typeof(string)),
        EndTime = timestamp
    | project ServiceName, EndTime;

StartLogs
| summarize StartTimes = make_list(StartTime) by ServiceName
| join kind=inner (
    EndLogs
    | summarize EndTimes = make_list(EndTime) by ServiceName
) on ServiceName
| mv-expand StartTimes to typeof(datetime), EndTimes to typeof(datetime)
| where EndTimes >= StartTimes
| summarize EndTime = min(EndTimes) by ServiceName, StartTimes
| project ServiceName, StartTime=StartTimes, EndTime
| order by ServiceName asc, StartTime asc
