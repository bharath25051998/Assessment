let StartLogs = 
    traces
    | where timestamp >= ago(1d)
    | where message matches regex @"Running task .+"
    | extend 
        ServiceName = extract(@"Running task (.+)", 1, message, typeof(string)),
        StartTime = timestamp
    | project ServiceName, StartTime;

let EndLogs = 
    traces
    | where timestamp >= ago(1d)
    | where message matches regex @"Task .+ completed$"
    | extend 
        ServiceName = extract(@"Task (.+) completed$", 1, message, typeof(string)),
        EndTime = timestamp
    | project ServiceName, EndTime;

// Combine and process sequentially
StartLogs
| union (EndLogs)
| sort by ServiceName asc, StartTime asc, EndTime asc
| extend 
    EventType = iff(isnull(StartTime), "End", "Start"),
    EventTime = coalesce(StartTime, EndTime)
| serialize
| extend RunId = row_number(1, EventType == "Start")
| summarize 
    StartTime = minif(EventTime, EventType == "Start"),
    EndTime = minif(EventTime, EventType == "End")
    by ServiceName, RunId
| order by ServiceName asc, StartTime asc
