import logging
import os
import json
import openai
import azure.functions as func
import requests

def main(req: func.HttpRequest) -> func.HttpResponse:
    try:
        logging.info("‚û°Ô∏è Received PR review request.")
        data = req.get_json()

        pr_id = data["resource"]["pullRequestId"]
        repo_id = data["resource"]["repository"]["id"]
        project = os.environ["AZURE_PROJECT_NAME"]
        org = os.environ["AZURE_ORG_NAME"]
        pat = os.environ["AZURE_DEVOPS_PAT"]

        # Extract PR title and description
        pr_title = data["resource"]["title"]
        pr_description = data["resource"]["description"]

        prompt = f"""
        You are a code reviewer. Review the following pull request and say whether it should be approved or rejected. Give reasons.

        Title: {pr_title}
        Description: {pr_description}

        Reply in the format: APPROVED or REJECTED: [Your Reason]
        """

        # OpenAI API call
        openai.api_key = os.environ["AZURE_OPENAI_KEY"]
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[{"role": "user", "content": prompt}]
        )

        review_comment = response['choices'][0]['message']['content']
        logging.info(f"ü§ñ OpenAI Review: {review_comment}")

        # Post comment to PR
        devops_url = f"https://dev.azure.com/{org}/{project}/_apis/git/repositories/{repo_id}/pullRequests/{pr_id}/threads?api-version=7.0"

        headers = {"Content-Type": "application/json"}
        auth = ('', pat)

        comment_payload = {
            "comments": [
                {
                    "parentCommentId": 0,
                    "content": f"ü§ñ **Automated Review**\n\n{review_comment}",
                    "commentType": 1
                }
            ],
            "status": "active"
        }

        comment_res = requests.post(devops_url, headers=headers, json=comment_payload, auth=auth)

        if comment_res.status_code == 201:
            logging.info("‚úÖ Comment posted to PR.")
        else:
            logging.error(f"‚ùå Failed to post comment: {comment_res.text}")

        return func.HttpResponse("Review completed.", status_code=200)

    except Exception as e:
        logging.error(f"‚ùå Error: {str(e)}")
        return func.HttpResponse("Internal Server Error", status_code=500)
