@{
    ViewBag.Title = "Assessment";
    var initialQuestionIndex = 0; // Set the initial question index here
}

<style>
    /* Add your CSS styles here */
    .question { display: none; } /* Initially hide all questions */
    /* Add more styles as needed */
</style>

<div id="questionContainer">
    @for (int i = 0; i < Model.Count; i++)
    {
        var question = Model[i];
        <div class="question" data-index="@i">
            <h2>@question.QuestionText</h2>
            @if (question.QuestionType == 1) // Single-choice question
            {
                <div class="options">
                    @foreach (var option in question.Options)
                    {
                        <label>
                            <input type="radio" name="Question@i" value="@option.Id" />
                            @option.Text
                        </label>
                    }
                </div>
            }
            else if (question.QuestionType == 2) // Multiple-choice question
            {
                <div class="options">
                    @foreach (var option in question.Options)
                    {
                        <label>
                            <input type="checkbox" name="Question@i" value="@option.Id" />
                            @option.Text
                        </label>
                    }
                </div>
            }
        </div>
    }
</div>

<div style="text-align: center; margin-top: 20px;">
    <button id="prevBtn" disabled>Previous</button>
    <button id="nextBtn" disabled>Next</button>
    <button id="finishBtn" style="display: none;">Finish</button>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        var currentIndex = @Html.Raw(Json.Encode(initialQuestionIndex));
        var totalQuestions = @Html.Raw(Json.Encode(Model.Count));

        function showQuestion(index) {
            $('.question').hide();
            $('.question[data-index="' + index + '"]').show();
        }

        function isQuestionAnswered(index) {
            var selectedOptions = $('input[name="Question' + index + '"]:checked');
            return selectedOptions.length > 0;
        }

        function updateButtons() {
            $('#prevBtn').prop('disabled', currentIndex === 0);
            $('#nextBtn').prop('disabled', currentIndex >= totalQuestions - 1 || !isQuestionAnswered(currentIndex));
            $('#finishBtn').toggle(currentIndex === totalQuestions - 1);
        }

        $('#prevBtn').click(function() {
            if (currentIndex > 0) {
                currentIndex--;
                showQuestion(currentIndex);
                updateButtons();
            }
        });

        $('#nextBtn').click(function() {
            if (currentIndex < totalQuestions - 1) {
                currentIndex++;
                showQuestion(currentIndex);
                updateButtons();
            }
        });

        $('#finishBtn').click(function() {
            // Handle form submission here
            alert('Form submission logic goes here.');
        });

        // Use event delegation for dynamically loaded content
        $(document).on('change', '.options input', function() {
            updateButtons();
        });

        showQuestion(currentIndex);
        updateButtons();
    });
</script>
