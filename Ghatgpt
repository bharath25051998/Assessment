@page
@model IndexModel
@{
    ViewData["Title"] = "Home Page";
}

<h2>Master Price Table</h2>
<table id="priceTable" border="1">
    <thead>
        <tr>
            <th>Value</th>
            <th>Price</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var price in Model.Prices)
        {
            <tr>
                <td>@price.Value</td>
                <td>@price.Price</td>
            </tr>
        }
    </tbody>
</table>

<button id="addPriceBtn">Add Kicker Types</button>

<div id="priceModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <form id="priceForm">
        <div id="priceFields">
            <!-- Dynamic input fields for kicker types and prices will be added here -->
        </div>
        <button type="button" id="saveBtn">Save</button>
    </form>
  </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
    $(document).ready(function() {
        const addPriceBtn = $('#addPriceBtn');
        const modal = $('#priceModal');
        const span = $('.close');
        const priceFields = $('#priceFields');
        const saveBtn = $('#saveBtn');
        const priceTable = $('#priceTable tbody');

        // Fetch and display existing prices on page load
        $.ajax({
            url: '/api/prices',
            method: 'GET',
            success: function(data) {
                updatePriceTable(data);
            },
            error: function(error) {
                console.error('Error fetching prices:', error);
            }
        });

        // When the user clicks the button, open the modal
        addPriceBtn.on('click', function() {
            priceFields.empty(); // Clear previous fields
            const rows = priceTable.children('tr');
            rows.each(function() {
                const value = $(this).find('td:first').text();
                priceFields.append(`<div>${value}: <input type="text" name="kickerTypes[]" /> Price: <input type="text" name="prices[]" /></div>`);
            });
            modal.show();
        });

        // When the user clicks on <span> (x), close the modal
        span.on('click', function() {
            modal.hide();
        });

        // When the user clicks anywhere outside of the modal, close it
        $(window).on('click', function(event) {
            if ($(event.target).is(modal)) {
                modal.hide();
            }
        });

        // Save the entered prices
        saveBtn.on('click', function() {
            const formData = $('#priceForm').serializeArray();
            let prices = [];

            // Construct array of objects from form data
            for (let i = 0; i < formData.length; i += 2) {
                let obj = {
                    value: formData[i].value,
                    price: formData[i + 1].value
                };
                prices.push(obj);
            }

            $.ajax({
                url: '/api/prices',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(prices),
                success: function(data) {
                    updatePriceTable(data);
                    modal.hide();
                },
                error: function(error) {
                    console.error('Error:', error);
                }
            });
        });

        function updatePriceTable(prices) {
            priceTable.empty();
            prices.forEach(price => {
                priceTable.append(`<tr><td>${price.value}</td><td>${price.price}</td></tr>`);
            });
        }
    });
    </script>
}

<style>
.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgb(0,0,0);
    background-color: rgba(0,0,0,0.4);
    padding-top: 60px;
}
.modal-content {
    background-color: #fefefe;
    margin: 5% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
}
.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}
.close:hover,
.close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}
</style>
